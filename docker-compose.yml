version: '3.8'

services:
  # DATABASES
  postgres-auth:
    image: postgres:14
    ports:
      - '5433:5432'
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123
    volumes:
      - pgdata-auth:/var/lib/postgresql/data

  postgres-image:
    image: postgres:14
    ports:
      - '5434:5432'
    environment:
      POSTGRES_DB: images_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123
    volumes:
      - pgdata-image:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - '6379:6379'

  # MINIO
  minio:
    image: minio/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"

  minio-init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        sleep 5;
        mc alias set local http://minio:9000 minioadmin minioadmin &&
        mc mb --ignore-existing local/uploads &&
        mc anonymous set public local/uploads;
      "
  

  # BACKEND MICROSERVICES
  api-gateway:
    build:
      context: ./server
      dockerfile: ../docker/Dockerfile.api-gateway
    ports:
      - '3000:3000'
    depends_on:
      - auth
      - image

  auth:
    build:
      context: ./server
      dockerfile: ../docker/Dockerfile.auth
    depends_on:
      - postgres-auth
    #    volumes:
    #      - ./server:/app
    env_file:
      - ./server/apps/auth/.env

  image:
    build:
      context: ./server
      dockerfile: ../docker/Dockerfile.image
    depends_on:
      - postgres-image
      - minio
      - redis
    #    volumes:
    #      - ./server:/app
    env_file:
      - ./server/apps/image/.env

  # FRONTEND
  client:
    build:
      context: ./client
      dockerfile: ../docker/Dockerfile.client
    ports:
      - "5173:5173"

volumes:
  pgdata-auth:
  pgdata-image:
  minio-data:
